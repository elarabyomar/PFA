version: '3.8'

services:
  # Backend FastAPI
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+asyncpg://postgrestest:SYS@db:5432/test3
      - JWT_SECRET=your_super_secret_key_change_in_production
    depends_on:
      - db
    networks:
      - auth-network

  # Frontend React
  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - auth-network

  # Base de données PostgreSQL
  db:
    image: postgres:16
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgrestest
      POSTGRES_PASSWORD: SYS
      POSTGRES_DB: test3
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/config/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - auth-network

  # pgAdmin pour la gestion de la base de données
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - auth-network

  # Service de développement frontend (optionnel)
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - auth-network
    profiles:
      - dev

volumes:
  postgres_data:

networks:
  auth-network:
    driver: bridge 